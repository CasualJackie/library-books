{"version":3,"sources":["api/loadBooks.js","Shapes/BooksListShape.js","Shapes/SearchBooksShape.js","components/Autocomplete/Autocomplete.jsx","components/SearchBooks/SearchBooks.jsx","components/BooksList/BooksList.jsx","App.jsx","index.jsx"],"names":["BASE_URL","loadBooks","a","request","fetch","response","json","BooksListShape","volumeInfo","PropTypes","shape","title","string","isRequired","authors","arrayOf","imageLinks","smallThumbnail","SearchBooksShape","query","handleQuery","func","handleSubmit","autocomplete","autocompleteError","bool","autocompleteStatus","clickAutocomplete","Autocomplete","memo","className","map","id","type","onClick","propTypes","SearchBooks","onChange","value","disabled","BooksList","books","src","undefined","alt","author","App","useState","setBooks","setQuery","statusError","setStatusError","setAutocomplete","setAutocompleteError","setAutocompleteStatus","useCallback","event","target","queryAutocomplete","preventDefault","loadData","loadAutocomplete","part","items","debounce","totalItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAAMA,EAAW,iDAEJC,EAAS,uCAAG,0CAAAC,EAAA,6DAAMC,EAAN,+BAAgB,GAAhB,SACAC,MAAMJ,EAAWG,GADjB,cACjBE,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qD,wBCATC,EAAiB,CAC5BC,WAAYC,IAAUC,MAAM,CAC1BC,MAAOF,IAAUG,OAAOC,WACxBC,QAASL,IAAUM,QAAQN,IAAUG,QAAQC,WAC7CG,WAAYP,IAAUC,MAAM,CAC1BO,eAAgBR,IAAUG,OAAOC,aAChCA,aACFA,YACHA,WCPWK,EAAmB,CAC9BC,MAAOV,IAAUG,OAAOC,WACxBO,YAAaX,IAAUY,KAAKR,WAC5BS,aAAcb,IAAUY,KAAKR,WAC7BU,aAAcd,IAAUM,QAAQR,GAAgBM,WAChDW,kBAAmBf,IAAUgB,KAAKZ,WAClCa,mBAAoBjB,IAAUgB,KAAKZ,WACnCc,kBAAmBlB,IAAUY,KAAKR,YAClCA,WCNWe,G,MAAeC,gBAAK,gBAAGN,EAAH,EAAGA,aAAcI,EAAjB,EAAiBA,kBAAjB,OAC/B,qBAAKG,UAAU,mCAAf,SACGP,EAAaQ,KAAI,gBAAGvB,EAAH,EAAGA,WAAYwB,EAAf,EAAeA,GAAf,OAChB,wBAEEC,KAAK,SACLH,UAAU,qBACVI,QAAS,kBAAMP,EAAkBnB,EAAWG,QAJ9C,SAMGH,EAAWG,OALPqB,YAWbJ,EAAaO,UAAY,CACvBR,kBAAmBlB,IAAUY,KAAKR,WAClCU,aAAcd,IAAUM,QAAQR,GAAgBM,YAChDA,WClBK,IAAMuB,EAAcP,gBAAK,gBAC9BV,EAD8B,EAC9BA,MACAC,EAF8B,EAE9BA,YACAE,EAH8B,EAG9BA,aACAC,EAJ8B,EAI9BA,aACAC,EAL8B,EAK9BA,kBACAE,EAN8B,EAM9BA,mBACAC,EAP8B,EAO9BA,kBAP8B,OAS9B,qCACE,uBAAMG,UAAU,OAAhB,UACE,uBACEA,UAAU,mCACVO,SAAUjB,EACVkB,MAAOnB,IAGT,wBACEW,UAAU,+BACVI,QAASZ,EACTW,KAAK,SACLM,SAAUf,EAJZ,uBAWAE,IACIF,EACA,qBAAKM,UAAU,QAAf,wBAEA,cAAC,EAAD,CACEH,kBAAmBA,EACnBJ,aAAcA,WAO1Ba,EAAYD,UAAYjB,E,UCzCXsB,EAAYX,gBAAK,gBAAGY,EAAH,EAAGA,MAAH,OAC5B,qBAAKX,UAAU,QAAf,SACGW,EAAMV,KAAI,gBAAGvB,EAAH,EAAGA,WAAYwB,EAAf,EAAeA,GAAf,OACT,sBAAKF,UAAU,OAAf,UACE,qBACEA,UAAU,YACVY,SAA+BC,IAA1BnC,EAAWQ,WACZ,yBACAR,EAAWQ,WAAWC,eAC1B2B,IAAKpC,EAAWG,QAGlB,8BACE,6BACGH,EAAWG,UAIhB,8BACGH,EAAWM,SAAWN,EAAWM,QAAQiB,KAAI,SAAAc,GAAM,OAClD,8BAAmBA,GAATA,UAjBWb,WAyBjCQ,EAAUL,UAAY,CACpBM,MAAOhC,IAAUM,QAAQR,GAAgBM,YACzCA,WC3BK,IAAMiC,EAAM,WAAO,IAAD,EACGC,mBAAS,IADZ,mBAChBN,EADgB,KACTO,EADS,OAEGD,mBAAS,IAFZ,mBAEhB5B,EAFgB,KAET8B,EAFS,OAGeF,oBAAS,GAHxB,mBAGhBG,EAHgB,KAGHC,EAHG,OAIiBJ,mBAAS,IAJ1B,mBAIhBxB,EAJgB,KAIF6B,EAJE,OAK2BL,oBAAS,GALpC,mBAKhBvB,EALgB,KAKG6B,EALH,OAM6BN,oBAAS,GANtC,mBAMhBrB,EANgB,KAMI4B,EANJ,KAQjBlC,EAAcmC,uBAAY,SAACC,GAAW,IAClClB,EAAUkB,EAAMC,OAAhBnB,MAERW,EAASX,GAEK,KAAVA,GAMJgB,GAAsB,GACtBI,EAAkBpB,IANhBgB,GAAsB,KAOvB,IAEGhC,EAAeiC,uBAAY,SAACC,GAGhC,GAFAA,EAAMG,iBAEQ,KAAVxC,EAIF,OAHAkC,GAAqB,QACrBF,GAAe,GAKjBS,EAASzC,GACTmC,GAAsB,KACrB,CAACnC,IAEEQ,EAAoB4B,uBAAY,SAAC5C,GACrCiD,EAASjD,GACTsC,EAAStC,GACT2C,GAAsB,KACrB,IAEGO,EAAmBN,sBAAW,uCAAC,WAAMO,GAAN,eAAA5D,EAAA,sEACZD,EAAU6D,GADE,UAC7BzD,EAD6B,YAIpBsC,IAFAtC,EAAS0D,MAFW,uBAKjCV,GAAqB,GALY,0BAUnCA,GAAqB,GACrBD,EAAgB/C,EAAS0D,OAXU,2CAAD,sDAYjC,IAEGL,EAAoBH,sBAAYS,IAASH,EAAkB,KAAM,IAEjED,EAAWL,sBAAW,uCAAC,WAAM5C,GAAN,eAAAT,EAAA,sEACJD,EAAUU,GADN,OAGC,KAFtBN,EADqB,QAGd4D,WACXd,GAAe,IAEfA,GAAe,GACfH,EAAS3C,EAAS0D,QAPO,2CAAD,sDASzB,IAEH,OACE,sBAAKjC,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAf,SACGoB,EAEG,qBACEpB,UAAU,mBACVY,IAAI,yBACJE,IAAI,cAGN,cAAC,EAAD,CAAWH,MAAOA,MAGxB,qBAAKX,UAAU,mBAAf,SACE,cAAC,EAAD,CACEX,MAAOA,EACPC,YAAaA,EACbE,aAAcA,EACdC,aAAcA,EACdC,kBAAmBA,EACnBE,mBAAoBA,EACpBC,kBAAmBA,U,MC/F7BuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8311d4af.chunk.js","sourcesContent":["const BASE_URL = 'https://www.googleapis.com/books/v1/volumes?q=';\n\nexport const loadBooks = async(request = '') => {\n  const response = await fetch(BASE_URL + request);\n\n  return response.json();\n};\n","import PropTypes from 'prop-types';\n\nexport const BooksListShape = {\n  volumeInfo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    authors: PropTypes.arrayOf(PropTypes.string).isRequired,\n    imageLinks: PropTypes.shape({\n      smallThumbnail: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport { BooksListShape } from './BooksListShape';\n\nexport const SearchBooksShape = {\n  query: PropTypes.string.isRequired,\n  handleQuery: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  autocomplete: PropTypes.arrayOf(BooksListShape).isRequired,\n  autocompleteError: PropTypes.bool.isRequired,\n  autocompleteStatus: PropTypes.bool.isRequired,\n  clickAutocomplete: PropTypes.func.isRequired,\n}.isRequired;\n","import React, { memo } from 'react';\nimport './Autocomplete.scss';\nimport PropTypes from 'prop-types';\nimport { BooksListShape } from '../../Shapes/BooksListShape';\n\nexport const Autocomplete = memo(({ autocomplete, clickAutocomplete }) => (\n  <div className=\"form__item ui selection dropdown\">\n    {autocomplete.map(({ volumeInfo, id }) => (\n      <button\n        key={id}\n        type=\"button\"\n        className=\"autocomplete__item\"\n        onClick={() => clickAutocomplete(volumeInfo.title)}\n      >\n        {volumeInfo.title}\n      </button>\n    ))}\n  </div>\n));\n\nAutocomplete.propTypes = {\n  clickAutocomplete: PropTypes.func.isRequired,\n  autocomplete: PropTypes.arrayOf(BooksListShape).isRequired,\n}.isRequired;\n","import React, { memo } from 'react';\nimport './SearchBooks.scss';\nimport { SearchBooksShape } from '../../Shapes/SearchBooksShape';\nimport { Autocomplete } from '../Autocomplete/Autocomplete';\n\nexport const SearchBooks = memo(({\n  query,\n  handleQuery,\n  handleSubmit,\n  autocomplete,\n  autocompleteError,\n  autocompleteStatus,\n  clickAutocomplete,\n}) => (\n  <>\n    <form className=\"form\">\n      <input\n        className=\"form__item ui selection dropdown\"\n        onChange={handleQuery}\n        value={query}\n      />\n\n      <button\n        className=\"form__item ui primary button\"\n        onClick={handleSubmit}\n        type=\"submit\"\n        disabled={autocompleteError}\n      >\n        search\n      </button>\n    </form>\n\n    {\n      autocompleteStatus\n      && (autocompleteError\n        ? <div className=\"error\">No matches</div>\n        : (\n          <Autocomplete\n            clickAutocomplete={clickAutocomplete}\n            autocomplete={autocomplete}\n          />\n        ))\n    }\n  </>\n));\n\nSearchBooks.propTypes = SearchBooksShape;\n","import React, { memo } from 'react';\nimport './BooksList.scss';\nimport PropTypes from 'prop-types';\nimport { BooksListShape } from '../../Shapes/BooksListShape';\n\nexport const BooksList = memo(({ books }) => (\n  <div className=\"books\">\n    {books.map(({ volumeInfo, id }) => (\n      <div className=\"book\" key={id}>\n        <img\n          className=\"book__img\"\n          src={volumeInfo.imageLinks === undefined\n            ? './images/logo_book.png'\n            : volumeInfo.imageLinks.smallThumbnail}\n          alt={volumeInfo.title}\n        />\n\n        <div>\n          <h4>\n            {volumeInfo.title}\n          </h4>\n        </div>\n\n        <div>\n          {volumeInfo.authors && volumeInfo.authors.map(author => (\n            <div key={author}>{author}</div>\n          ))}\n        </div>\n      </div>\n    ))}\n  </div>\n));\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(BooksListShape).isRequired,\n}.isRequired;\n","import React, { useState, useCallback } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.scss';\nimport debounce from 'lodash.debounce';\nimport { loadBooks } from './api/loadBooks';\nimport { SearchBooks } from './components/SearchBooks/SearchBooks';\nimport { BooksList } from './components/BooksList/BooksList';\n\nexport const App = () => {\n  const [books, setBooks] = useState([]);\n  const [query, setQuery] = useState('');\n  const [statusError, setStatusError] = useState(false);\n  const [autocomplete, setAutocomplete] = useState([]);\n  const [autocompleteError, setAutocompleteError] = useState(false);\n  const [autocompleteStatus, setAutocompleteStatus] = useState(false);\n\n  const handleQuery = useCallback((event) => {\n    const { value } = event.target;\n\n    setQuery(value);\n\n    if (value === '') {\n      setAutocompleteStatus(false);\n\n      return;\n    }\n\n    setAutocompleteStatus(true);\n    queryAutocomplete(value);\n  }, []);\n\n  const handleSubmit = useCallback((event) => {\n    event.preventDefault();\n\n    if (query === '') {\n      setAutocompleteError(true);\n      setStatusError(true);\n\n      return;\n    }\n\n    loadData(query);\n    setAutocompleteStatus(false);\n  }, [query]);\n\n  const clickAutocomplete = useCallback((title) => {\n    loadData(title);\n    setQuery(title);\n    setAutocompleteStatus(false);\n  }, []);\n\n  const loadAutocomplete = useCallback(async(part) => {\n    const response = await loadBooks(part);\n    const result = response.items;\n\n    if (result === undefined) {\n      setAutocompleteError(true);\n\n      return;\n    }\n\n    setAutocompleteError(false);\n    setAutocomplete(response.items);\n  }, []);\n\n  const queryAutocomplete = useCallback(debounce(loadAutocomplete, 500), []);\n\n  const loadData = useCallback(async(title) => {\n    const response = await loadBooks(title);\n\n    if (response.totalItems === 0) {\n      setStatusError(true);\n    } else {\n      setStatusError(false);\n      setBooks(response.items);\n    }\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"container__left\">\n        {statusError\n          ? (\n            <img\n              className=\"container__image\"\n              src=\"./images/not_found.png\"\n              alt=\"not found\"\n            />\n          )\n          : <BooksList books={books} />}\n      </div>\n\n      <div className=\"container__right\">\n        <SearchBooks\n          query={query}\n          handleQuery={handleQuery}\n          handleSubmit={handleSubmit}\n          autocomplete={autocomplete}\n          autocompleteError={autocompleteError}\n          autocompleteStatus={autocompleteStatus}\n          clickAutocomplete={clickAutocomplete}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}