{"version":3,"sources":["api/library.jsx","components/Input.jsx","components/BooksList.jsx","components/InputError.jsx","App.jsx","index.jsx"],"names":["BASE_URL","loadBooks","a","request","fetch","response","json","Input","query","handleQuery","handleSubmit","onChange","value","onClick","type","BooksList","books","map","volumeInfo","id","src","imageLinks","smallThumbnail","alt","title","authors","author","InputError","App","useState","setBooks","setSearch","errorStatus","setErrorStatus","loadData","totalItems","items","event","target","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAAMA,G,MAAW,kDAEJC,EAAS,uCAAG,0CAAAC,EAAA,6DAAMC,EAAN,+BAAgB,GAAhB,SACAC,MAAMJ,EAAWG,GADjB,cACjBE,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qDCCTC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,aAAvB,OACnB,iCACE,uBAAOC,SAAUF,EAAaG,MAAOJ,IACrC,wBAAQK,QAASH,EAAcI,KAAK,SAApC,wBCHSC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,8BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,GAAf,OACT,gCACE,qBACEC,IAAKF,EAAWG,WAAWC,eAC3BC,IAAKL,EAAWM,QAElB,8BAAMN,EAAWM,QAEhBN,EAAWO,SAAWP,EAAWO,QAAQR,KAAI,SAAAS,GAAM,OAClD,8BAAMA,SARAP,SCJHQ,EAAa,kBACxB,kECIWC,EAAM,WAAO,IAAD,EACGC,mBAAS,IADZ,mBAChBb,EADgB,KACTc,EADS,OAEID,mBAAS,IAFb,mBAEhBrB,EAFgB,KAETuB,EAFS,OAGeF,oBAAS,GAHxB,mBAGhBG,EAHgB,KAGHC,EAHG,KAejBC,EAAQ,uCAAG,4BAAAhC,EAAA,sEACQD,EAAUO,GADlB,OAGa,KAFtBH,EADS,QAGF8B,WACXF,GAAe,IAEfA,GAAe,GACfH,EAASzB,EAAS+B,QAPL,2CAAH,qDAWd,OACE,gCACE,cAAC,EAAD,CACE5B,MAAOA,EACPC,YAzBc,SAAC4B,GACnBN,EAAUM,EAAMC,OAAO1B,QAyBnBF,aAtBe,SAAC2B,GACpBA,EAAME,iBAENL,OAsBGF,EACG,cAAC,EAAD,IACA,cAAC,EAAD,CAAWhB,MAAOA,QCtC5BwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8322ad37.chunk.js","sourcesContent":["const BASE_URL = 'https://www.googleapis.com/books/v1/volumes?q=';\n\nexport const loadBooks = async(request = '') => {\n  const response = await fetch(BASE_URL + request);\n\n  return response.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({ query, handleQuery, handleSubmit }) => (\n  <form>\n    <input onChange={handleQuery} value={query} />\n    <button onClick={handleSubmit} type=\"submit\">search</button>\n  </form>\n);\n\nInput.propTypes = {\n  query: PropTypes.string.isRequired,\n  handleQuery: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n}.isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const BooksList = ({ books }) => (\n  <div>\n    {books.map(({ volumeInfo, id }) => (\n      <div key={id}>\n        <img\n          src={volumeInfo.imageLinks.smallThumbnail}\n          alt={volumeInfo.title}\n        />\n        <div>{volumeInfo.title}</div>\n\n        {volumeInfo.authors && volumeInfo.authors.map(author => (\n          <div>{author}</div>\n        ))}\n      </div>\n    ))}\n  </div>\n);\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf({\n    id: PropTypes.string.isRequired,\n    volumeInfo: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      // eslint-disable-next-line react/forbid-prop-types\n      authors: PropTypes.array.isRequired,\n      imageLinks: PropTypes.shape({\n        smallThumbnail: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n}.isRequired;\n","import React from 'react';\n\nexport const InputError = () => (\n  <div>\n    Invalid entry, no books found!\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { loadBooks } from './api/library';\nimport { Input } from './components/Input';\nimport { BooksList } from './components/BooksList';\nimport { InputError } from './components/InputError';\n\nexport const App = () => {\n  const [books, setBooks] = useState([]);\n  const [query, setSearch] = useState('');\n  const [errorStatus, setErrorStatus] = useState(false);\n\n  const handleQuery = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    loadData();\n  };\n\n  const loadData = async() => {\n    const response = await loadBooks(query);\n\n    if (response.totalItems === 0) {\n      setErrorStatus(true);\n    } else {\n      setErrorStatus(false);\n      setBooks(response.items);\n    }\n  };\n\n  return (\n    <div>\n      <Input\n        query={query}\n        handleQuery={handleQuery}\n        handleSubmit={handleSubmit}\n      />\n\n      {errorStatus\n        ? <InputError />\n        : <BooksList books={books} />}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}