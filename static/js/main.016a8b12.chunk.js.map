{"version":3,"sources":["api/loadBooks.js","shapes/BooksListShape.js","components/BooksList/BooksList.jsx","components/Autocomplete/Autocomplete.jsx","shapes/SearchBooksShape.js","components/SearchBooks/SearchBooks.jsx","App.jsx","index.jsx"],"names":["BASE_URL","loadBooks","a","request","fetch","response","json","BooksListShape","volumeInfo","PropTypes","shape","title","string","isRequired","authors","arrayOf","imageLinks","smallThumbnail","BooksList","memo","books","className","map","id","src","undefined","alt","author","propTypes","Autocomplete","func","bool","autocomplete","clickAutocomplete","type","onClick","SearchBooks","getBooks","changeErrorStatus","useState","query","setQuery","autocompleteSuggestions","setAutocompleteSuggestions","autocompleteError","setAutocompleteError","autocompleteStatus","setAutocompleteStatus","handleQuery","useCallback","event","value","target","queryAutocomplete","handleSubmit","preventDefault","loadAutocomplete","part","items","debounce","onChange","disabled","App","setBooks","statusError","setStatusError","loadData","totalItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.016a8b12.chunk.js","sourcesContent":["const BASE_URL = 'https://www.googleapis.com/books/v1/volumes?q=';\n\nexport const loadBooks = async(request = '') => {\n  const response = await fetch(BASE_URL + request);\n\n  return response.json();\n};\n","import PropTypes from 'prop-types';\n\nexport const BooksListShape = {\n  volumeInfo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    authors: PropTypes.arrayOf(PropTypes.string).isRequired,\n    imageLinks: PropTypes.shape({\n      smallThumbnail: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n}.isRequired;\n","import React, { memo } from 'react';\nimport './BooksList.scss';\nimport PropTypes from 'prop-types';\nimport { BooksListShape } from '../../shapes/BooksListShape';\n\nexport const BooksList = memo(({ books }) => (\n  <div className=\"books\">\n    {books.map(({ volumeInfo, id }) => (\n      <div className=\"book\" key={id}>\n        <img\n          className=\"book__img\"\n          src={volumeInfo.imageLinks === undefined\n            ? './images/logo_book.png'\n            : volumeInfo.imageLinks.smallThumbnail}\n          alt={volumeInfo.title}\n        />\n\n        <div>\n          <h4>\n            {volumeInfo.title}\n          </h4>\n        </div>\n\n        <div>\n          {volumeInfo.authors && volumeInfo.authors.map(author => (\n            <div key={author}>{author}</div>\n          ))}\n        </div>\n      </div>\n    ))}\n  </div>\n));\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(BooksListShape).isRequired,\n}.isRequired;\n","import React, { memo } from 'react';\nimport './Autocomplete.scss';\nimport PropTypes from 'prop-types';\nimport { BooksListShape } from '../../shapes/BooksListShape';\n\nexport const Autocomplete = memo(({ autocomplete, clickAutocomplete }) => (\n  <div className=\"form__item ui selection dropdown\">\n    {autocomplete.map(({ volumeInfo, id }) => (\n      <button\n        key={id}\n        type=\"button\"\n        className=\"autocomplete__item\"\n        onClick={() => clickAutocomplete(volumeInfo.title)}\n      >\n        {volumeInfo.title}\n      </button>\n    ))}\n  </div>\n));\n\nAutocomplete.propTypes = {\n  clickAutocomplete: PropTypes.func.isRequired,\n  autocomplete: PropTypes.arrayOf(BooksListShape).isRequired,\n}.isRequired;\n","import PropTypes from 'prop-types';\nimport { BooksListShape } from './BooksListShape';\n\nexport const SearchBooksShape = {\n  getBooks: PropTypes.func.isRequired,\n  autocomplete: PropTypes.arrayOf(BooksListShape).isRequired,\n  changeErrorStatus: PropTypes.bool.isRequired,\n}.isRequired;\n","import React, { memo, useState, useCallback } from 'react';\nimport './SearchBooks.scss';\nimport debounce from 'lodash.debounce';\nimport { loadBooks } from '../../api/loadBooks';\nimport { SearchBooksShape } from '../../shapes/SearchBooksShape';\nimport { Autocomplete } from '../Autocomplete/Autocomplete';\n\nexport const SearchBooks = memo(({ getBooks, changeErrorStatus }) => {\n  const [query, setQuery] = useState('');\n  const [autocompleteSuggestions, setAutocompleteSuggestions] = useState([]);\n  const [autocompleteError, setAutocompleteError] = useState(false);\n  const [autocompleteStatus, setAutocompleteStatus] = useState(false);\n\n  const handleQuery = useCallback((event) => {\n    const { value } = event.target;\n\n    setQuery(value);\n\n    if (value === '') {\n      setAutocompleteStatus(false);\n\n      return;\n    }\n\n    setAutocompleteStatus(true);\n    queryAutocomplete(value);\n  }, []);\n\n  const handleSubmit = useCallback((event) => {\n    event.preventDefault();\n\n    if (query === '') {\n      setAutocompleteError(true);\n      changeErrorStatus(true);\n\n      return;\n    }\n\n    getBooks(query);\n    setAutocompleteStatus(false);\n  }, [query]);\n\n  const loadAutocomplete = useCallback(async(part) => {\n    const response = await loadBooks(part);\n    const result = response.items;\n\n    if (result === undefined) {\n      setAutocompleteError(true);\n\n      return;\n    }\n\n    setAutocompleteError(false);\n    setAutocompleteSuggestions(response.items);\n  }, []);\n\n  const queryAutocomplete = useCallback(debounce(loadAutocomplete, 500), []);\n\n  const clickAutocomplete = useCallback((title) => {\n    getBooks(title);\n    setQuery(title);\n    setAutocompleteStatus(false);\n  }, []);\n\n  return (\n    <>\n      <form className=\"form\">\n        <input\n          className=\"form__item ui selection dropdown\"\n          onChange={handleQuery}\n          value={query}\n        />\n\n        <button\n          className=\"form__item ui primary button\"\n          onClick={handleSubmit}\n          type=\"submit\"\n          disabled={autocompleteError}\n        >\n          search\n        </button>\n      </form>\n\n      {\n        autocompleteStatus\n        && (autocompleteError\n          ? <div className=\"error\">No matches</div>\n          : (\n            <Autocomplete\n              autocomplete={autocompleteSuggestions}\n              clickAutocomplete={clickAutocomplete}\n            />\n          ))\n      }\n    </>\n  );\n});\n\nSearchBooks.propTypes = SearchBooksShape;\n","import React, { useState, useCallback } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.scss';\nimport { loadBooks } from './api/loadBooks';\nimport { BooksList } from './components/BooksList/BooksList';\nimport { SearchBooks } from './components/SearchBooks/SearchBooks';\n\nexport const App = () => {\n  const [books, setBooks] = useState([]);\n  const [statusError, setStatusError] = useState(false);\n\n  const loadData = useCallback(async(title) => {\n    const response = await loadBooks(title);\n\n    if (response.totalItems === 0) {\n      setStatusError(true);\n    } else {\n      setStatusError(false);\n      setBooks(response.items);\n    }\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"container__left\">\n        {statusError\n          ? (\n            <img\n              className=\"container__image\"\n              src=\"./images/not_found.png\"\n              alt=\"not found\"\n            />\n          )\n          : <BooksList books={books} />}\n      </div>\n\n      <div className=\"container__right\">\n        <SearchBooks getBooks={loadData} changeErrorStatus={setStatusError} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}